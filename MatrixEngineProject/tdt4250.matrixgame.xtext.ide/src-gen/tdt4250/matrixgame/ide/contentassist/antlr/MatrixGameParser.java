/*
 * generated by Xtext 2.36.0
 */
package tdt4250.matrixgame.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import tdt4250.matrixgame.ide.contentassist.antlr.internal.InternalMatrixGameParser;
import tdt4250.matrixgame.services.MatrixGameGrammarAccess;

public class MatrixGameParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MatrixGameGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MatrixGameGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getTileTypeAccess().getAlternatives(), "rule__TileType__Alternatives");
			builder.put(grammarAccess.getActionTypeAccess().getAlternatives(), "rule__ActionType__Alternatives");
			builder.put(grammarAccess.getGameLogicAccess().getGroup(), "rule__GameLogic__Group__0");
			builder.put(grammarAccess.getGameLogicAccess().getGroup_2(), "rule__GameLogic__Group_2__0");
			builder.put(grammarAccess.getGameLogicAccess().getGroup_7(), "rule__GameLogic__Group_7__0");
			builder.put(grammarAccess.getGameLogicAccess().getGroup_7_3(), "rule__GameLogic__Group_7_3__0");
			builder.put(grammarAccess.getGameLogicAccess().getGroup_8(), "rule__GameLogic__Group_8__0");
			builder.put(grammarAccess.getGameLogicAccess().getGroup_8_3(), "rule__GameLogic__Group_8_3__0");
			builder.put(grammarAccess.getPlayerAccess().getGroup(), "rule__Player__Group__0");
			builder.put(grammarAccess.getPlayerAccess().getGroup_4(), "rule__Player__Group_4__0");
			builder.put(grammarAccess.getPlayerAccess().getGroup_5(), "rule__Player__Group_5__0");
			builder.put(grammarAccess.getPlayerAccess().getGroup_5_3(), "rule__Player__Group_5_3__0");
			builder.put(grammarAccess.getMapAccess().getGroup(), "rule__Map__Group__0");
			builder.put(grammarAccess.getMapAccess().getGroup_2(), "rule__Map__Group_2__0");
			builder.put(grammarAccess.getMapAccess().getGroup_7(), "rule__Map__Group_7__0");
			builder.put(grammarAccess.getMapAccess().getGroup_11(), "rule__Map__Group_11__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup_4(), "rule__Action__Group_4__0");
			builder.put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
			builder.put(grammarAccess.getStateAccess().getGroup_5(), "rule__State__Group_5__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getTileAccess().getGroup(), "rule__Tile__Group__0");
			builder.put(grammarAccess.getTileAccess().getGroup_7(), "rule__Tile__Group_7__0");
			builder.put(grammarAccess.getGameLogicAccess().getGameNameAssignment_2_1(), "rule__GameLogic__GameNameAssignment_2_1");
			builder.put(grammarAccess.getGameLogicAccess().getPlayerAssignment_4(), "rule__GameLogic__PlayerAssignment_4");
			builder.put(grammarAccess.getGameLogicAccess().getMapAssignment_6(), "rule__GameLogic__MapAssignment_6");
			builder.put(grammarAccess.getGameLogicAccess().getActions_playedAssignment_7_2(), "rule__GameLogic__Actions_playedAssignment_7_2");
			builder.put(grammarAccess.getGameLogicAccess().getActions_playedAssignment_7_3_1(), "rule__GameLogic__Actions_playedAssignment_7_3_1");
			builder.put(grammarAccess.getGameLogicAccess().getHas_stateAssignment_8_2(), "rule__GameLogic__Has_stateAssignment_8_2");
			builder.put(grammarAccess.getGameLogicAccess().getHas_stateAssignment_8_3_1(), "rule__GameLogic__Has_stateAssignment_8_3_1");
			builder.put(grammarAccess.getPlayerAccess().getNameAssignment_2(), "rule__Player__NameAssignment_2");
			builder.put(grammarAccess.getPlayerAccess().getScoreAssignment_4_1(), "rule__Player__ScoreAssignment_4_1");
			builder.put(grammarAccess.getPlayerAccess().getTakes_actionAssignment_5_2(), "rule__Player__Takes_actionAssignment_5_2");
			builder.put(grammarAccess.getPlayerAccess().getTakes_actionAssignment_5_3_1(), "rule__Player__Takes_actionAssignment_5_3_1");
			builder.put(grammarAccess.getMapAccess().getAmountOfTilesAssignment_2_1(), "rule__Map__AmountOfTilesAssignment_2_1");
			builder.put(grammarAccess.getMapAccess().getMapSizeXAssignment_4(), "rule__Map__MapSizeXAssignment_4");
			builder.put(grammarAccess.getMapAccess().getMapSizeYAssignment_6(), "rule__Map__MapSizeYAssignment_6");
			builder.put(grammarAccess.getMapAccess().getMapNameAssignment_7_1(), "rule__Map__MapNameAssignment_7_1");
			builder.put(grammarAccess.getMapAccess().getTileAssignment_10(), "rule__Map__TileAssignment_10");
			builder.put(grammarAccess.getMapAccess().getTileAssignment_11_1(), "rule__Map__TileAssignment_11_1");
			builder.put(grammarAccess.getActionAccess().getNameAssignment_2(), "rule__Action__NameAssignment_2");
			builder.put(grammarAccess.getActionAccess().getActionTypeAssignment_4_1(), "rule__Action__ActionTypeAssignment_4_1");
			builder.put(grammarAccess.getStateAccess().getFlagsPlacedAssignment_0(), "rule__State__FlagsPlacedAssignment_0");
			builder.put(grammarAccess.getStateAccess().getIsOverAssignment_1(), "rule__State__IsOverAssignment_1");
			builder.put(grammarAccess.getStateAccess().getNameAssignment_3(), "rule__State__NameAssignment_3");
			builder.put(grammarAccess.getStateAccess().getTurnsTakenAssignment_5_1(), "rule__State__TurnsTakenAssignment_5_1");
			builder.put(grammarAccess.getStateAccess().getTileAssignment_7(), "rule__State__TileAssignment_7");
			builder.put(grammarAccess.getTileAccess().getIsAccessibleAssignment_0(), "rule__Tile__IsAccessibleAssignment_0");
			builder.put(grammarAccess.getTileAccess().getTilePlaceAssignment_4(), "rule__Tile__TilePlaceAssignment_4");
			builder.put(grammarAccess.getTileAccess().getTileTypeAssignment_6(), "rule__Tile__TileTypeAssignment_6");
			builder.put(grammarAccess.getTileAccess().getColorAssignment_7_1(), "rule__Tile__ColorAssignment_7_1");
			builder.put(grammarAccess.getTileAccess().getXCoordinateAssignment_9(), "rule__Tile__XCoordinateAssignment_9");
			builder.put(grammarAccess.getTileAccess().getYCoordinateAssignment_11(), "rule__Tile__YCoordinateAssignment_11");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MatrixGameGrammarAccess grammarAccess;

	@Override
	protected InternalMatrixGameParser createParser() {
		InternalMatrixGameParser result = new InternalMatrixGameParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MatrixGameGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MatrixGameGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
