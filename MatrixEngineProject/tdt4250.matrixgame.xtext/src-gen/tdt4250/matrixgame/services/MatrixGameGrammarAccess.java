/*
 * generated by Xtext 2.36.0
 */
package tdt4250.matrixgame.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MatrixGameGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class GameLogicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tdt4250.matrixgame.MatrixGame.GameLogic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGameLogicKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cGameNameKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cGameNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cGameNameEStringParserRuleCall_2_1_0 = (RuleCall)cGameNameAssignment_2_1.eContents().get(0);
		private final Keyword cPlayerKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPlayerAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPlayerPlayerParserRuleCall_4_0 = (RuleCall)cPlayerAssignment_4.eContents().get(0);
		private final Keyword cMapKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMapAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMapMapParserRuleCall_6_0 = (RuleCall)cMapAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cActions_playedKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cActions_playedAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cActions_playedActionParserRuleCall_7_2_0 = (RuleCall)cActions_playedAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cActions_playedAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cActions_playedActionParserRuleCall_7_3_1_0 = (RuleCall)cActions_playedAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cHas_stateKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cHas_stateAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cHas_stateStateParserRuleCall_8_2_0 = (RuleCall)cHas_stateAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cHas_stateAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cHas_stateStateParserRuleCall_8_3_1_0 = (RuleCall)cHas_stateAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//GameLogic returns GameLogic:
		//    'GameLogic'
		//    '{'
		//        ('gameName' gameName=EString)?
		//        'player' player=Player
		//        'map' map=Map
		//        ('actions_played' '{' actions_played+=Action ( "," actions_played+=Action)* '}' )?
		//        ('has_state' '{' has_state+=State ( "," has_state+=State)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'GameLogic'
		//'{'
		//    ('gameName' gameName=EString)?
		//    'player' player=Player
		//    'map' map=Map
		//    ('actions_played' '{' actions_played+=Action ( "," actions_played+=Action)* '}' )?
		//    ('has_state' '{' has_state+=State ( "," has_state+=State)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'GameLogic'
		public Keyword getGameLogicKeyword_0() { return cGameLogicKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('gameName' gameName=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'gameName'
		public Keyword getGameNameKeyword_2_0() { return cGameNameKeyword_2_0; }
		
		//gameName=EString
		public Assignment getGameNameAssignment_2_1() { return cGameNameAssignment_2_1; }
		
		//EString
		public RuleCall getGameNameEStringParserRuleCall_2_1_0() { return cGameNameEStringParserRuleCall_2_1_0; }
		
		//'player'
		public Keyword getPlayerKeyword_3() { return cPlayerKeyword_3; }
		
		//player=Player
		public Assignment getPlayerAssignment_4() { return cPlayerAssignment_4; }
		
		//Player
		public RuleCall getPlayerPlayerParserRuleCall_4_0() { return cPlayerPlayerParserRuleCall_4_0; }
		
		//'map'
		public Keyword getMapKeyword_5() { return cMapKeyword_5; }
		
		//map=Map
		public Assignment getMapAssignment_6() { return cMapAssignment_6; }
		
		//Map
		public RuleCall getMapMapParserRuleCall_6_0() { return cMapMapParserRuleCall_6_0; }
		
		//('actions_played' '{' actions_played+=Action ( "," actions_played+=Action)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'actions_played'
		public Keyword getActions_playedKeyword_7_0() { return cActions_playedKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//actions_played+=Action
		public Assignment getActions_playedAssignment_7_2() { return cActions_playedAssignment_7_2; }
		
		//Action
		public RuleCall getActions_playedActionParserRuleCall_7_2_0() { return cActions_playedActionParserRuleCall_7_2_0; }
		
		//( "," actions_played+=Action)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//actions_played+=Action
		public Assignment getActions_playedAssignment_7_3_1() { return cActions_playedAssignment_7_3_1; }
		
		//Action
		public RuleCall getActions_playedActionParserRuleCall_7_3_1_0() { return cActions_playedActionParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//('has_state' '{' has_state+=State ( "," has_state+=State)* '}' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'has_state'
		public Keyword getHas_stateKeyword_8_0() { return cHas_stateKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//has_state+=State
		public Assignment getHas_stateAssignment_8_2() { return cHas_stateAssignment_8_2; }
		
		//State
		public RuleCall getHas_stateStateParserRuleCall_8_2_0() { return cHas_stateStateParserRuleCall_8_2_0; }
		
		//( "," has_state+=State)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//has_state+=State
		public Assignment getHas_stateAssignment_8_3_1() { return cHas_stateAssignment_8_3_1; }
		
		//State
		public RuleCall getHas_stateStateParserRuleCall_8_3_1_0() { return cHas_stateStateParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class PlayerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tdt4250.matrixgame.MatrixGame.Player");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPlayerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPlayerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cScoreKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cScoreAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cScoreEIntParserRuleCall_4_1_0 = (RuleCall)cScoreAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTakes_actionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTakes_actionAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cTakes_actionActionCrossReference_5_2_0 = (CrossReference)cTakes_actionAssignment_5_2.eContents().get(0);
		private final RuleCall cTakes_actionActionEStringParserRuleCall_5_2_0_1 = (RuleCall)cTakes_actionActionCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cTakes_actionAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cTakes_actionActionCrossReference_5_3_1_0 = (CrossReference)cTakes_actionAssignment_5_3_1.eContents().get(0);
		private final RuleCall cTakes_actionActionEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cTakes_actionActionCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Player returns Player:
		//    {Player}
		//    'Player'
		//    name=EString
		//    '{'
		//        ('score' score=EInt)?
		//        ('takes_action' '(' takes_action+=[Action|EString] ( "," takes_action+=[Action|EString])* ')' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Player}
		//'Player'
		//name=EString
		//'{'
		//    ('score' score=EInt)?
		//    ('takes_action' '(' takes_action+=[Action|EString] ( "," takes_action+=[Action|EString])* ')' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Player}
		public Action getPlayerAction_0() { return cPlayerAction_0; }
		
		//'Player'
		public Keyword getPlayerKeyword_1() { return cPlayerKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('score' score=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'score'
		public Keyword getScoreKeyword_4_0() { return cScoreKeyword_4_0; }
		
		//score=EInt
		public Assignment getScoreAssignment_4_1() { return cScoreAssignment_4_1; }
		
		//EInt
		public RuleCall getScoreEIntParserRuleCall_4_1_0() { return cScoreEIntParserRuleCall_4_1_0; }
		
		//('takes_action' '(' takes_action+=[Action|EString] ( "," takes_action+=[Action|EString])* ')' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'takes_action'
		public Keyword getTakes_actionKeyword_5_0() { return cTakes_actionKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//takes_action+=[Action|EString]
		public Assignment getTakes_actionAssignment_5_2() { return cTakes_actionAssignment_5_2; }
		
		//[Action|EString]
		public CrossReference getTakes_actionActionCrossReference_5_2_0() { return cTakes_actionActionCrossReference_5_2_0; }
		
		//EString
		public RuleCall getTakes_actionActionEStringParserRuleCall_5_2_0_1() { return cTakes_actionActionEStringParserRuleCall_5_2_0_1; }
		
		//( "," takes_action+=[Action|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//takes_action+=[Action|EString]
		public Assignment getTakes_actionAssignment_5_3_1() { return cTakes_actionAssignment_5_3_1; }
		
		//[Action|EString]
		public CrossReference getTakes_actionActionCrossReference_5_3_1_0() { return cTakes_actionActionCrossReference_5_3_1_0; }
		
		//EString
		public RuleCall getTakes_actionActionEStringParserRuleCall_5_3_1_0_1() { return cTakes_actionActionEStringParserRuleCall_5_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class MapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tdt4250.matrixgame.MatrixGame.Map");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMapKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAmountOfTilesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAmountOfTilesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAmountOfTilesEIntParserRuleCall_2_1_0 = (RuleCall)cAmountOfTilesAssignment_2_1.eContents().get(0);
		private final Keyword cMapSizeXKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMapSizeXAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMapSizeXEIntParserRuleCall_4_0 = (RuleCall)cMapSizeXAssignment_4.eContents().get(0);
		private final Keyword cMapSizeYKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMapSizeYAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMapSizeYEIntParserRuleCall_6_0 = (RuleCall)cMapSizeYAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMapNameKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMapNameAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMapNameEStringParserRuleCall_7_1_0 = (RuleCall)cMapNameAssignment_7_1.eContents().get(0);
		private final Keyword cTileKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cTileAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTileTileParserRuleCall_10_0 = (RuleCall)cTileAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cTileAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cTileTileParserRuleCall_11_1_0 = (RuleCall)cTileAssignment_11_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Map returns Map:
		//    'Map'
		//    '{'
		//        ('amountOfTiles' amountOfTiles=EInt)?
		//        'mapSizeX' mapSizeX=EInt
		//        'mapSizeY' mapSizeY=EInt
		//        ('mapName' mapName=EString)?
		//        'tile' '{' tile+=Tile ( "," tile+=Tile)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Map'
		//'{'
		//    ('amountOfTiles' amountOfTiles=EInt)?
		//    'mapSizeX' mapSizeX=EInt
		//    'mapSizeY' mapSizeY=EInt
		//    ('mapName' mapName=EString)?
		//    'tile' '{' tile+=Tile ( "," tile+=Tile)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Map'
		public Keyword getMapKeyword_0() { return cMapKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('amountOfTiles' amountOfTiles=EInt)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'amountOfTiles'
		public Keyword getAmountOfTilesKeyword_2_0() { return cAmountOfTilesKeyword_2_0; }
		
		//amountOfTiles=EInt
		public Assignment getAmountOfTilesAssignment_2_1() { return cAmountOfTilesAssignment_2_1; }
		
		//EInt
		public RuleCall getAmountOfTilesEIntParserRuleCall_2_1_0() { return cAmountOfTilesEIntParserRuleCall_2_1_0; }
		
		//'mapSizeX'
		public Keyword getMapSizeXKeyword_3() { return cMapSizeXKeyword_3; }
		
		//mapSizeX=EInt
		public Assignment getMapSizeXAssignment_4() { return cMapSizeXAssignment_4; }
		
		//EInt
		public RuleCall getMapSizeXEIntParserRuleCall_4_0() { return cMapSizeXEIntParserRuleCall_4_0; }
		
		//'mapSizeY'
		public Keyword getMapSizeYKeyword_5() { return cMapSizeYKeyword_5; }
		
		//mapSizeY=EInt
		public Assignment getMapSizeYAssignment_6() { return cMapSizeYAssignment_6; }
		
		//EInt
		public RuleCall getMapSizeYEIntParserRuleCall_6_0() { return cMapSizeYEIntParserRuleCall_6_0; }
		
		//('mapName' mapName=EString)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'mapName'
		public Keyword getMapNameKeyword_7_0() { return cMapNameKeyword_7_0; }
		
		//mapName=EString
		public Assignment getMapNameAssignment_7_1() { return cMapNameAssignment_7_1; }
		
		//EString
		public RuleCall getMapNameEStringParserRuleCall_7_1_0() { return cMapNameEStringParserRuleCall_7_1_0; }
		
		//'tile'
		public Keyword getTileKeyword_8() { return cTileKeyword_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//tile+=Tile
		public Assignment getTileAssignment_10() { return cTileAssignment_10; }
		
		//Tile
		public RuleCall getTileTileParserRuleCall_10_0() { return cTileTileParserRuleCall_10_0; }
		
		//( "," tile+=Tile)*
		public Group getGroup_11() { return cGroup_11; }
		
		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }
		
		//tile+=Tile
		public Assignment getTileAssignment_11_1() { return cTileAssignment_11_1; }
		
		//Tile
		public RuleCall getTileTileParserRuleCall_11_1_0() { return cTileTileParserRuleCall_11_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tdt4250.matrixgame.MatrixGame.Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cActionTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActionTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cActionTypeActionTypeEnumRuleCall_4_1_0 = (RuleCall)cActionTypeAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Action returns Action:
		//    {Action}
		//    'Action'
		//    name=EString
		//    '{'
		//        ('actionType' actionType=ActionType)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Action}
		//'Action'
		//name=EString
		//'{'
		//    ('actionType' actionType=ActionType)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Action}
		public Action getActionAction_0() { return cActionAction_0; }
		
		//'Action'
		public Keyword getActionKeyword_1() { return cActionKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('actionType' actionType=ActionType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'actionType'
		public Keyword getActionTypeKeyword_4_0() { return cActionTypeKeyword_4_0; }
		
		//actionType=ActionType
		public Assignment getActionTypeAssignment_4_1() { return cActionTypeAssignment_4_1; }
		
		//ActionType
		public RuleCall getActionTypeActionTypeEnumRuleCall_4_1_0() { return cActionTypeActionTypeEnumRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tdt4250.matrixgame.MatrixGame.State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFlagsPlacedAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cFlagsPlacedFlagsPlacedKeyword_0_0 = (Keyword)cFlagsPlacedAssignment_0.eContents().get(0);
		private final Assignment cIsOverAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsOverIsOverKeyword_1_0 = (Keyword)cIsOverAssignment_1.eContents().get(0);
		private final Keyword cStateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTurnsTakenKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTurnsTakenAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTurnsTakenEIntParserRuleCall_5_1_0 = (RuleCall)cTurnsTakenAssignment_5_1.eContents().get(0);
		private final Keyword cTileKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTileAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cTileTileCrossReference_7_0 = (CrossReference)cTileAssignment_7.eContents().get(0);
		private final RuleCall cTileTileEStringParserRuleCall_7_0_1 = (RuleCall)cTileTileCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//State returns State:
		//    (flagsPlaced?='flagsPlaced')?
		//    (isOver?='isOver')?
		//    'State'
		//    name=EString
		//    '{'
		//        ('turnsTaken' turnsTaken=EInt)?
		//        'tile' tile=[Tile|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//(flagsPlaced?='flagsPlaced')?
		//(isOver?='isOver')?
		//'State'
		//name=EString
		//'{'
		//    ('turnsTaken' turnsTaken=EInt)?
		//    'tile' tile=[Tile|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(flagsPlaced?='flagsPlaced')?
		public Assignment getFlagsPlacedAssignment_0() { return cFlagsPlacedAssignment_0; }
		
		//'flagsPlaced'
		public Keyword getFlagsPlacedFlagsPlacedKeyword_0_0() { return cFlagsPlacedFlagsPlacedKeyword_0_0; }
		
		//(isOver?='isOver')?
		public Assignment getIsOverAssignment_1() { return cIsOverAssignment_1; }
		
		//'isOver'
		public Keyword getIsOverIsOverKeyword_1_0() { return cIsOverIsOverKeyword_1_0; }
		
		//'State'
		public Keyword getStateKeyword_2() { return cStateKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('turnsTaken' turnsTaken=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'turnsTaken'
		public Keyword getTurnsTakenKeyword_5_0() { return cTurnsTakenKeyword_5_0; }
		
		//turnsTaken=EInt
		public Assignment getTurnsTakenAssignment_5_1() { return cTurnsTakenAssignment_5_1; }
		
		//EInt
		public RuleCall getTurnsTakenEIntParserRuleCall_5_1_0() { return cTurnsTakenEIntParserRuleCall_5_1_0; }
		
		//'tile'
		public Keyword getTileKeyword_6() { return cTileKeyword_6; }
		
		//tile=[Tile|EString]
		public Assignment getTileAssignment_7() { return cTileAssignment_7; }
		
		//[Tile|EString]
		public CrossReference getTileTileCrossReference_7_0() { return cTileTileCrossReference_7_0; }
		
		//EString
		public RuleCall getTileTileEStringParserRuleCall_7_0_1() { return cTileTileEStringParserRuleCall_7_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tdt4250.matrixgame.MatrixGame.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tdt4250.matrixgame.MatrixGame.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class TileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tdt4250.matrixgame.MatrixGame.Tile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAccessibleAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAccessibleIsAccessibleKeyword_0_0 = (Keyword)cIsAccessibleAssignment_0.eContents().get(0);
		private final Keyword cTileKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTilePlaceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTilePlaceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTilePlaceEStringParserRuleCall_4_0 = (RuleCall)cTilePlaceAssignment_4.eContents().get(0);
		private final Keyword cTileTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTileTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTileTypeTileTypeEnumRuleCall_6_0 = (RuleCall)cTileTypeAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cColorKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cColorAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cColorEStringParserRuleCall_7_1_0 = (RuleCall)cColorAssignment_7_1.eContents().get(0);
		private final Keyword cXCoordinateKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cXCoordinateAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cXCoordinateEIntParserRuleCall_9_0 = (RuleCall)cXCoordinateAssignment_9.eContents().get(0);
		private final Keyword cYCoordinateKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cYCoordinateAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cYCoordinateEIntParserRuleCall_11_0 = (RuleCall)cYCoordinateAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Tile returns Tile:
		//    isAccessible?='isAccessible'
		//    'Tile'
		//    '{'
		//        'tilePlace' tilePlace=EString
		//        'tileType' tileType=TileType
		//        ('Color' Color=EString)?
		//        'xCoordinate' xCoordinate=EInt
		//        'yCoordinate' yCoordinate=EInt
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//isAccessible?='isAccessible'
		//'Tile'
		//'{'
		//    'tilePlace' tilePlace=EString
		//    'tileType' tileType=TileType
		//    ('Color' Color=EString)?
		//    'xCoordinate' xCoordinate=EInt
		//    'yCoordinate' yCoordinate=EInt
		//'}'
		public Group getGroup() { return cGroup; }
		
		//isAccessible?='isAccessible'
		public Assignment getIsAccessibleAssignment_0() { return cIsAccessibleAssignment_0; }
		
		//'isAccessible'
		public Keyword getIsAccessibleIsAccessibleKeyword_0_0() { return cIsAccessibleIsAccessibleKeyword_0_0; }
		
		//'Tile'
		public Keyword getTileKeyword_1() { return cTileKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'tilePlace'
		public Keyword getTilePlaceKeyword_3() { return cTilePlaceKeyword_3; }
		
		//tilePlace=EString
		public Assignment getTilePlaceAssignment_4() { return cTilePlaceAssignment_4; }
		
		//EString
		public RuleCall getTilePlaceEStringParserRuleCall_4_0() { return cTilePlaceEStringParserRuleCall_4_0; }
		
		//'tileType'
		public Keyword getTileTypeKeyword_5() { return cTileTypeKeyword_5; }
		
		//tileType=TileType
		public Assignment getTileTypeAssignment_6() { return cTileTypeAssignment_6; }
		
		//TileType
		public RuleCall getTileTypeTileTypeEnumRuleCall_6_0() { return cTileTypeTileTypeEnumRuleCall_6_0; }
		
		//('Color' Color=EString)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'Color'
		public Keyword getColorKeyword_7_0() { return cColorKeyword_7_0; }
		
		//Color=EString
		public Assignment getColorAssignment_7_1() { return cColorAssignment_7_1; }
		
		//EString
		public RuleCall getColorEStringParserRuleCall_7_1_0() { return cColorEStringParserRuleCall_7_1_0; }
		
		//'xCoordinate'
		public Keyword getXCoordinateKeyword_8() { return cXCoordinateKeyword_8; }
		
		//xCoordinate=EInt
		public Assignment getXCoordinateAssignment_9() { return cXCoordinateAssignment_9; }
		
		//EInt
		public RuleCall getXCoordinateEIntParserRuleCall_9_0() { return cXCoordinateEIntParserRuleCall_9_0; }
		
		//'yCoordinate'
		public Keyword getYCoordinateKeyword_10() { return cYCoordinateKeyword_10; }
		
		//yCoordinate=EInt
		public Assignment getYCoordinateAssignment_11() { return cYCoordinateAssignment_11; }
		
		//EInt
		public RuleCall getYCoordinateEIntParserRuleCall_11_0() { return cYCoordinateEIntParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tdt4250.matrixgame.MatrixGame.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	public class TileTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "tdt4250.matrixgame.MatrixGame.TileType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBASICEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBASICBASICKeyword_0_0 = (Keyword)cBASICEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cREWARDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cREWARDREWARDKeyword_1_0 = (Keyword)cREWARDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cOBSTACLEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cOBSTACLEOBSTACLEKeyword_2_0 = (Keyword)cOBSTACLEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cINTERACTIVEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cINTERACTIVEINTERACTIVEKeyword_3_0 = (Keyword)cINTERACTIVEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCRASHEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCRASHCRASHKeyword_4_0 = (Keyword)cCRASHEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum TileType returns TileType:
		//                BASIC = 'BASIC' | REWARD = 'REWARD' | OBSTACLE = 'OBSTACLE' | INTERACTIVE = 'INTERACTIVE' | CRASH = 'CRASH';
		public EnumRule getRule() { return rule; }
		
		//BASIC = 'BASIC' | REWARD = 'REWARD' | OBSTACLE = 'OBSTACLE' | INTERACTIVE = 'INTERACTIVE' | CRASH = 'CRASH'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BASIC = 'BASIC'
		public EnumLiteralDeclaration getBASICEnumLiteralDeclaration_0() { return cBASICEnumLiteralDeclaration_0; }
		
		//'BASIC'
		public Keyword getBASICBASICKeyword_0_0() { return cBASICBASICKeyword_0_0; }
		
		//REWARD = 'REWARD'
		public EnumLiteralDeclaration getREWARDEnumLiteralDeclaration_1() { return cREWARDEnumLiteralDeclaration_1; }
		
		//'REWARD'
		public Keyword getREWARDREWARDKeyword_1_0() { return cREWARDREWARDKeyword_1_0; }
		
		//OBSTACLE = 'OBSTACLE'
		public EnumLiteralDeclaration getOBSTACLEEnumLiteralDeclaration_2() { return cOBSTACLEEnumLiteralDeclaration_2; }
		
		//'OBSTACLE'
		public Keyword getOBSTACLEOBSTACLEKeyword_2_0() { return cOBSTACLEOBSTACLEKeyword_2_0; }
		
		//INTERACTIVE = 'INTERACTIVE'
		public EnumLiteralDeclaration getINTERACTIVEEnumLiteralDeclaration_3() { return cINTERACTIVEEnumLiteralDeclaration_3; }
		
		//'INTERACTIVE'
		public Keyword getINTERACTIVEINTERACTIVEKeyword_3_0() { return cINTERACTIVEINTERACTIVEKeyword_3_0; }
		
		//CRASH = 'CRASH'
		public EnumLiteralDeclaration getCRASHEnumLiteralDeclaration_4() { return cCRASHEnumLiteralDeclaration_4; }
		
		//'CRASH'
		public Keyword getCRASHCRASHKeyword_4_0() { return cCRASHCRASHKeyword_4_0; }
	}
	public class ActionTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "tdt4250.matrixgame.MatrixGame.ActionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNONENONEKeyword_0_0 = (Keyword)cNONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cREVEALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cREVEALREVEALKeyword_1_0 = (Keyword)cREVEALEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMOVEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMOVEMOVEKeyword_2_0 = (Keyword)cMOVEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTOGGLEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTOGGLETOGGLEKeyword_3_0 = (Keyword)cTOGGLEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cATTACKEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cATTACKATTACKKeyword_4_0 = (Keyword)cATTACKEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum ActionType returns ActionType:
		//                NONE = 'NONE' | REVEAL = 'REVEAL' | MOVE = 'MOVE' | TOGGLE = 'TOGGLE' | ATTACK = 'ATTACK';
		public EnumRule getRule() { return rule; }
		
		//NONE = 'NONE' | REVEAL = 'REVEAL' | MOVE = 'MOVE' | TOGGLE = 'TOGGLE' | ATTACK = 'ATTACK'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NONE = 'NONE'
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_0() { return cNONEEnumLiteralDeclaration_0; }
		
		//'NONE'
		public Keyword getNONENONEKeyword_0_0() { return cNONENONEKeyword_0_0; }
		
		//REVEAL = 'REVEAL'
		public EnumLiteralDeclaration getREVEALEnumLiteralDeclaration_1() { return cREVEALEnumLiteralDeclaration_1; }
		
		//'REVEAL'
		public Keyword getREVEALREVEALKeyword_1_0() { return cREVEALREVEALKeyword_1_0; }
		
		//MOVE = 'MOVE'
		public EnumLiteralDeclaration getMOVEEnumLiteralDeclaration_2() { return cMOVEEnumLiteralDeclaration_2; }
		
		//'MOVE'
		public Keyword getMOVEMOVEKeyword_2_0() { return cMOVEMOVEKeyword_2_0; }
		
		//TOGGLE = 'TOGGLE'
		public EnumLiteralDeclaration getTOGGLEEnumLiteralDeclaration_3() { return cTOGGLEEnumLiteralDeclaration_3; }
		
		//'TOGGLE'
		public Keyword getTOGGLETOGGLEKeyword_3_0() { return cTOGGLETOGGLEKeyword_3_0; }
		
		//ATTACK = 'ATTACK'
		public EnumLiteralDeclaration getATTACKEnumLiteralDeclaration_4() { return cATTACKEnumLiteralDeclaration_4; }
		
		//'ATTACK'
		public Keyword getATTACKATTACKKeyword_4_0() { return cATTACKATTACKKeyword_4_0; }
	}
	
	private final GameLogicElements pGameLogic;
	private final PlayerElements pPlayer;
	private final MapElements pMap;
	private final ActionElements pAction;
	private final StateElements pState;
	private final EStringElements pEString;
	private final EIntElements pEInt;
	private final TileElements pTile;
	private final TileTypeElements eTileType;
	private final EBooleanElements pEBoolean;
	private final ActionTypeElements eActionType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MatrixGameGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGameLogic = new GameLogicElements();
		this.pPlayer = new PlayerElements();
		this.pMap = new MapElements();
		this.pAction = new ActionElements();
		this.pState = new StateElements();
		this.pEString = new EStringElements();
		this.pEInt = new EIntElements();
		this.pTile = new TileElements();
		this.eTileType = new TileTypeElements();
		this.pEBoolean = new EBooleanElements();
		this.eActionType = new ActionTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("tdt4250.matrixgame.MatrixGame".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//GameLogic returns GameLogic:
	//    'GameLogic'
	//    '{'
	//        ('gameName' gameName=EString)?
	//        'player' player=Player
	//        'map' map=Map
	//        ('actions_played' '{' actions_played+=Action ( "," actions_played+=Action)* '}' )?
	//        ('has_state' '{' has_state+=State ( "," has_state+=State)* '}' )?
	//    '}';
	public GameLogicElements getGameLogicAccess() {
		return pGameLogic;
	}
	
	public ParserRule getGameLogicRule() {
		return getGameLogicAccess().getRule();
	}
	
	//Player returns Player:
	//    {Player}
	//    'Player'
	//    name=EString
	//    '{'
	//        ('score' score=EInt)?
	//        ('takes_action' '(' takes_action+=[Action|EString] ( "," takes_action+=[Action|EString])* ')' )?
	//    '}';
	public PlayerElements getPlayerAccess() {
		return pPlayer;
	}
	
	public ParserRule getPlayerRule() {
		return getPlayerAccess().getRule();
	}
	
	//Map returns Map:
	//    'Map'
	//    '{'
	//        ('amountOfTiles' amountOfTiles=EInt)?
	//        'mapSizeX' mapSizeX=EInt
	//        'mapSizeY' mapSizeY=EInt
	//        ('mapName' mapName=EString)?
	//        'tile' '{' tile+=Tile ( "," tile+=Tile)* '}'
	//    '}';
	public MapElements getMapAccess() {
		return pMap;
	}
	
	public ParserRule getMapRule() {
		return getMapAccess().getRule();
	}
	
	//Action returns Action:
	//    {Action}
	//    'Action'
	//    name=EString
	//    '{'
	//        ('actionType' actionType=ActionType)?
	//    '}';
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//State returns State:
	//    (flagsPlaced?='flagsPlaced')?
	//    (isOver?='isOver')?
	//    'State'
	//    name=EString
	//    '{'
	//        ('turnsTaken' turnsTaken=EInt)?
	//        'tile' tile=[Tile|EString]
	//    '}';
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//Tile returns Tile:
	//    isAccessible?='isAccessible'
	//    'Tile'
	//    '{'
	//        'tilePlace' tilePlace=EString
	//        'tileType' tileType=TileType
	//        ('Color' Color=EString)?
	//        'xCoordinate' xCoordinate=EInt
	//        'yCoordinate' yCoordinate=EInt
	//    '}';
	public TileElements getTileAccess() {
		return pTile;
	}
	
	public ParserRule getTileRule() {
		return getTileAccess().getRule();
	}
	
	//enum TileType returns TileType:
	//                BASIC = 'BASIC' | REWARD = 'REWARD' | OBSTACLE = 'OBSTACLE' | INTERACTIVE = 'INTERACTIVE' | CRASH = 'CRASH';
	public TileTypeElements getTileTypeAccess() {
		return eTileType;
	}
	
	public EnumRule getTileTypeRule() {
		return getTileTypeAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum ActionType returns ActionType:
	//                NONE = 'NONE' | REVEAL = 'REVEAL' | MOVE = 'MOVE' | TOGGLE = 'TOGGLE' | ATTACK = 'ATTACK';
	public ActionTypeElements getActionTypeAccess() {
		return eActionType;
	}
	
	public EnumRule getActionTypeRule() {
		return getActionTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
