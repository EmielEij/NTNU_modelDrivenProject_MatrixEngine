// automatically generated by Xtext
grammar tdt4250.matrixgame.MatrixGame with org.eclipse.xtext.common.Terminals

import "http://www.ntnu.no/tdt4250/MatrixGame" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

GameLogic returns GameLogic:
	'GameLogic'
	'{'
		('gameName' gameName=EString)?
		'player' player=Player
		'map' map=Map
		('actions_played' '{' actions_played+=Action ( "," actions_played+=Action)* '}' )?
		('has_state' '{' has_state+=State ( "," has_state+=State)* '}' )?
	'}';



Player returns Player:
	{Player}
	'Player'
	name=EString
	'{'
		('score' score=EInt)?
		('takes_action' '(' takes_action+=[Action|EString] ( "," takes_action+=[Action|EString])* ')' )?
	'}';

Map returns Map:
	'Map'
	'{'
		('amountOfTiles' amountOfTiles=EInt)?
		'mapSizeX' mapSizeX=EInt
		'mapSizeY' mapSizeY=EInt
		('mapName' mapName=EString)?
		'tile' '{' tile+=Tile ( "," tile+=Tile)* '}' 
	'}';

Action returns Action:
	{Action}
	'Action'
	name=EString
	'{'
		('actionType' actionType=ActionType)?
	'}';

State returns State:
	(flagsPlaced?='flagsPlaced')?
	(isOver?='isOver')?
	'State'
	name=EString
	'{'
		('turnsTaken' turnsTaken=EInt)?
		'tile' tile=[Tile|EString]
	'}';

EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;

Tile returns Tile:
	isAccessible?='isAccessible'
	'Tile'
	'{'
		'tilePlace' tilePlace=EString
		'tileType' tileType=TileType
		('Color' Color=EString)?
		'xCoordinate' xCoordinate=EInt
		'yCoordinate' yCoordinate=EInt
	'}';

enum TileType returns TileType:
				BASIC = 'BASIC' | REWARD = 'REWARD' | OBSTACLE = 'OBSTACLE' | INTERACTIVE = 'INTERACTIVE' | CRASH = 'CRASH';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

enum ActionType returns ActionType:
				NONE = 'NONE' | REVEAL = 'REVEAL' | MOVE = 'MOVE' | TOGGLE = 'TOGGLE' | ATTACK = 'ATTACK';
